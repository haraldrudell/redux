{"version":3,"sources":["logo.svg","Logo.js","storeutil/StoreSlice.js","api/data.js","api/transforms.js","api/fakeapi.js","jobs/jobsSlice.js","apputil/ErrorText.js","dataarea/AreaSlice.js","jobs/Job.js","jobs/Jobs.js","jobs/JobResult.js","jobinput/swSlice.js","jobinput/hwSlice.js","jobinput/DropDown.js","jobinput/Form.js","jobinput/JobForm.js","dataarea/DataArea.js","App.js","storeutil/store.js","root/Root.js","index.js"],"names":["module","exports","__webpack_require__","p","rotate360","keyframes","_templateObject","LogoElement","styled","img","_templateObject2","Logo","react_default","a","createElement","src","logo","alt","StoreSlice","reducer","this","bind","setSliceName","getSliceData","load","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","abrupt","_this","fetchData","catch","e","type","SET_RESULT","console","error","stop","_x","apply","arguments","sliceName","String","eSlice","concat","dataSlice","ADD_ONE","_name","invokeApi","apiData","Array","isArray","data","OrderedMap","map","job","id","fromJS","Error","_ref2","log","stateSlice","length","undefined","Map","action","display","size","keySeq","toArray","join","substring","oldMap","get","ee","oMap","constrArg","set","push","state","value","api_data","jobs","name","results","status","images","software","label","info","applications","image","hardware","max","cfd","icing","turbomachinery","turbulence","structural","strength","thermal","impact","electromagnetics","radio","cooling","createJob","softwareId","applicationId","hardwareId","cores","software0","filter","application","_ref3","_ref4","hardwareCores","shortid","generate","duration","Math","floor","random","o","b","cj","getJobs","_getJobs","instance","_createJob","createObject","createJobApi","newJob","addOne","loadJobs","SET_AREA","ListLoaderError","div","ErrorText_templateObject","ErrorWidth","ErrorText_templateObject2","ErrorText","text","TextField_default","message","fullWidth","helperText","SHOW_FORM","AreaSlice_showForm","sn","showDataAreaForm","Job","handleJobAction","assertThisInitialized","_this$props","props","payload","setDataAreaContent","_this$props2","Card_default","onClick","CardContent_default","Typography_default","variant","align","gutterBottom","ownProps","PureComponent","connect","mapStateToProps","ButtonFixed","Button","Jobs_templateObject","TypographyPad","Typography","Jobs_templateObject2","Jobs","addJobHandler","preventDefault","react","color","aria-label","Add_default","Grid_default","container","justify","item","CircularProgress_default","key","jobs_Job","_getSliceData","Component","Img","JobResult_templateObject","imageUrls","List","uri","i","loadSw","loadHw","DropDown","defVal","handleChange","opts","FormControl_default","component","InputLabel_default","shrink","htmlFor","Select_default","onChange","inputProps","valueSeq","opt","MenuItem_default","FlexForm","form","Form_templateObject","Form","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submit","defaultName","hw","sw","hw0","first","_this$updateApp","updateApp","apps","_this$state","_this$state2","smax","setState","appIds","app","has","_e$target","target","esm_typeof","Number","apid0","_this$updateApp2","defineProperty","updateMaxCores","swProps","hwProps","apProps","defaultValue","DropDown_DropDown","Button_default","JobForm","formProps","Form_Form","hwData","swData","DataArea","isShowForm","jobinput_JobForm","JobResult","stateToSlice","GridMax","Grid","App_templateObject","App","direction","alignItems","spacing","jobs_Jobs","dataarea_DataArea","reducers","addSlice","asName","jobsReducer","jobsName","hwReducer","hwName","swReducer","swName","store","createStore","combineReducers","applyMiddleware","thunk","injectGlobal","Root_templateObject","render","CssBaseline_default","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.de62385f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React from 'react'\nimport styled, {keyframes} from 'styled-components'\nimport logo from './logo.svg'\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\nconst LogoElement = styled.img`\nwidth: 100px\nanimation: ${rotate360} infinite 20s linear;\n`\nexport default () => <LogoElement src={logo} alt=\"React logo\" />\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport {OrderedMap, fromJS, Map} from 'immutable'\n\nexport default class StoreSlice {\n  reducer = this.reducer.bind(this)\n  setSliceName = this.setSliceName.bind(this)\n  getSliceData = this.getSliceData.bind(this)\n\n  setSliceName(sliceName) {\n    this.sliceName = String(sliceName || '')\n    this.eSlice = `${sliceName}error`\n    this.dataSlice = `${sliceName}`\n    this.SET_RESULT = `SET_RESULT_${sliceName}`\n    this.ADD_ONE = `ADD_ONE_${sliceName}`\n    this._name = `${sliceName}SliceInstance`\n  }\n\n  // load thunk\n  load = () => async dispatch => this.fetchData(dispatch).catch(e => dispatch({type: this.SET_RESULT, e})).catch(console.error)\n\n  async fetchData(dispatch) {\n    const apiData = await this.invokeApi()\n    let e, data\n    if (Array.isArray(apiData)) {\n      data = new OrderedMap(apiData.map(job => [job.id, fromJS(job)]))\n      //data = fromJS(data)\n    } else e = new Error('setResult: data not array')\n    dispatch({type: this.SET_RESULT, e, data})\n  }\n\n  async invokeApi() {\n    throw new Error(`invokeApi not overridden`)\n  }\n\n  addOne({data}) { // action creator\n    const {ADD_ONE: type} = this\n    console.log(`${this._name}: ${type} data:`, data)\n    if (data != null) data = fromJS(data) // Map\n    return {type, data}\n  }\n\n  reducer(stateSlice = Map(), action) {\n    const {sliceName, eSlice, dataSlice, SET_RESULT, ADD_ONE} = this\n    const display = stateSlice instanceof Map ? `Map:${stateSlice.size}:${stateSlice.keySeq().toArray().join('\\x20').substring(0, 20)}` : stateSlice\n    switch(action.type) {\n    case SET_RESULT: {\n      console.log(`${this._name} ${SET_RESULT}: ${display} action:`, action)\n      let {e, data} = action\n      if (e === undefined && data === undefined) return stateSlice\n      const oldMap = stateSlice[sliceName] || Map()\n      e === undefined && (e = oldMap.get(eSlice))\n      data === undefined && (data = oldMap.get(dataSlice))\n      return new Map([\n        [eSlice, e],\n        [dataSlice, data],\n      ])\n      }\n    case ADD_ONE:\n      console.log(`${sliceName} ${ADD_ONE}: ${display} action:`, action)\n      // get the action data\n      let {data} = action\n      const id = data.get('id')\n\n      // ensure we have the new error\n      const ee = stateSlice.get(eSlice)\n\n      // get the new ordered map\n      const oMap = stateSlice.get(dataSlice)\n      const newOMap = oMap ? oMap.set(id, data) : new OrderedMap([[id, data]])\n\n      // prepare for Map construction\n      const constrArg = [[dataSlice, newOMap]]\n      ee && constrArg.push([eSlice, ee])\n\n      return new Map(constrArg)\n    default: return stateSlice\n    }\n  }\n\n  getSliceData(state) {\n    const value = state[this.sliceName]\n    return {\n      e: value && value.get(this.eSlice),\n      data: value && value.get(this.dataSlice),\n    }\n  }\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nexport default {\n  jobs: [\n    { name: 'Name 1', id: 'rJK69pItf', results: { status: 'finished', images: ['/images/strength2.jpg', '/images/strength1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']}},\n    { name: 'Name 2', id: 'BJxY6cTUKM', results: { status: 'finished', images: ['/images/radio2.jpg', '/images/radio1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']}},\n    { name: 'Name 3', id: 'H1ZKaqTLFf', results: { status: 'finished', images: ['/images/turbulence2.jpg', '/images/turbulence1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']}},\n  ],\n  software: [\n    { label: 'Computational Fluid Dynamics', id: 'cfd', info:'Computational fluid dynamics (CFD) is a branch of fluid mechanics that uses numerical analysis and data structures to solve and analyze problems that involve fluid flows', applications: [{label: 'Aircraft Icing', id: 'icing', image: \"path\"}, {label: 'Turbomachinery', id: 'turbomachinery', image: 'path'}, {label: 'Turbulence Modeling', id: 'turbulence', image: 'path'} ]},\n    { label: 'Structural Analysis', id: 'structural', info:'Structural analysis is the determination of the effects of loads on physical structures and their components. Structures subject to this type of analysis include all that must withstand loads, such as buildings, bridges, vehicles, machinery, furniture, attire, soil strata, prostheses and biological tissue.', applications: [{label: 'Strength Analysis', id: 'strength', image: \"path\"}, {label: 'Thermal Analysis', id: 'thermal', image: 'path'}, {label: 'Impact', id: 'impact', image: 'path'} ]},\n    { label: 'Electromagnetics', id: 'electromagnetics', info:'Electromagnetism is a branch of physics involving the study of the electromagnetic force, a type of physical interaction that occurs between electrically charged particles.', applications: [{label: 'Radio Frequency Interference', id: 'radio', image: \"path\"}, {label: 'Electronics Cooling', id: 'cooling', image: 'path'} ]},\n  ],\n  hardware: [\n    { label: 'Intel Xeon E4-1676  @ 2.3 GHz', id: 'e4', max: 32 },\n    { label: 'Intel Xeon E5-2667 @ 2.7 GHz', id: 'e5', max: 32 },\n    { label: 'Intel Xeon Platinum 8168 @ 3.2 GHz', id: 'platinum', max: 64 },\n  ],\n  results: {\n    cfd: {\n      icing: {images: ['/images/icing2.jpg', '/images/icing1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']},\n      turbomachinery: {images: ['/images/turbomachinery2.jpg', '/images/turbomachinery1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']},\n      turbulence: {images: ['/images/turbulence2.jpg', '/images/turbulence1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']}\n    },\n    structural: {\n      strength: {images: ['/images/strength2.jpg', '/images/strength1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']},\n      thermal: {images: ['/images/thermal2.jpg', '/images/thermal1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']},\n      impact: {images: ['/images/impact2.jpg', '/images/impact1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']},\n    },\n    electromagnetics: {\n      radio: {images: ['/images/radio2.jpg', '/images/radio1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']},\n      cooling: {images: ['/images/cooling2.jpg', '/images/cooling1.jpg', '/images/data2.jpg', '/images/data3.jpg', '/images/data4.jpg', '/images/data5.jpg']},\n    }\n  },\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport shortid from 'shortid'\n\nexport function createJob({name, softwareId, applicationId, hardwareId, cores}, data) {\n  const software0 = data.software.filter(({id}) => id === softwareId)[0]\n  const application = software0 && software0.applications.filter(({id}) => id === applicationId)[0]\n  const hardware = data.hardware.filter(({id}) => id === hardwareId)[0]\n  if (!name || !software0 || !application || !hardware || cores > hardware.max) return\n  const {label, id: i} = software0\n  const software = {type: {label, id: i}, application}\n  const id = shortid.generate()\n  const duration = durationf(cores)\n  const {images} = data.results[softwareId][applicationId]\n  const status = 'finished'\n  const results = {duration, images, status}\n  return {name, id, software, hardware, cores, results}\n}\n\nfunction durationf(hardwareCores) {\n  const total = Math.floor(Math.random() * (90000 - 70000 + 1)) + 70000;\n  return total - (hardwareCores*1000);\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\n/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport data from './data'\nimport { createJob as cj } from './transforms'\n//let debug = true\n\nexport const getSoftware = () => data.software\nexport const getHardware = () => data.hardware\nexport function createJob(o) {\n  const b = cj(o, data)\n  if (b) return b\n  else throw new Error('bad createJob arguments')\n}\nexport async function getJobs() {\n  return data.jobs\n}\n\nexport function setDebug(debug0) {\n  //debug = debug0\n}\n\nexport function imageUrl(src) {\n  return `https://raw.githubusercontent.com/haraldrudell/redux/master/public/${src}`\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport {StoreSlice} from 'storeutil'\nimport {getJobs, createJob as createJobApi} from 'api'\n\nclass JobsSlice extends StoreSlice {\n  async invokeApi() {\n    return getJobs()\n  }\n\n  // create job thunk\n  createJob = o => async (dispatch) => this._createJob(dispatch, o).catch(e => dispatch({type: this.SET_RESULT, e})).catch(console.error)\n\n  async _createJob(dispatch, createObject) {\n    const newJob = await createJobApi(createObject)\n    dispatch(this.addOne({data: newJob, dispatch}))\n  }\n}\n\nconst instance = new JobsSlice()\n\nexport const setSliceName = instance.setSliceName\nexport const reducer = instance.reducer\nexport const createJob = instance.createJob\nexport const loadJobs = instance.load\nexport const getSliceData = instance.getSliceData\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport styled from 'styled-components'\n\nconst ListLoaderError = styled.div`\ndisplay: flex\njustify-content: center\n`\nconst ErrorWidth = styled.div`\nwidth: 500px\n`\nexport default ({e, text}) =>\n  <ListLoaderError><ErrorWidth>\n    <TextField value={e.message || 'error'} error fullWidth helperText={text} />\n  </ErrorWidth></ListLoaderError>\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\n\nlet sliceName\n\n// action types\nlet SET_AREA\n\nconst SHOW_FORM = {AreaSlice_showForm: true} // class-local value: non-string\n\nsetSliceName('area')\n\nexport function setSliceName(sn) {\n  sliceName = sn = String(sn || '')\n  SET_AREA = `${sn}_SET_AREA`\n}\n\nexport function isShowForm(value) {\n  return value === SHOW_FORM\n}\n\nexport function isBlank(value) {\n  return value == null\n}\n\n// action values\n\nexport const showDataAreaForm = {type: SET_AREA, display: SHOW_FORM} // an action object\n\nexport function setDataAreaContent(display) { // action creator\n  console.log('setDataAreaDisplay:', display)\n  if (display !== null &&\n    !display && typeof display !== 'string') {\n      const e = new Error('bad setArea')\n      console.error(e)\n      return {type: SET_AREA, payload: e}\n  }\n  return {type: SET_AREA, display}\n}\n\nexport function reducer(state = null, action) {\n  switch(action.type) {\n  case SET_AREA: return action.display\n  default: return state\n  }\n}\n\nexport function stateToSlice(state) { // selector\n  return Object(state)[sliceName]\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React, {PureComponent} from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { connect } from 'react-redux'\nimport {getSliceData} from './jobsSlice'\nimport {setDataAreaContent} from 'dataarea/AreaSlice'\n\nclass Job extends PureComponent {\n  handleJobAction = this.handleJobAction.bind(this)\n\n  handleJobAction() {\n    const {dispatch, id} = this.props\n    dispatch(setDataAreaContent(id))\n  }\n\n  render() {\n    const {job, id} = this.props // job is immutable Map\n    const name = job && job.get('name')\n    const results = job && job.get('results')\n    const status = results && results.get('status')\n\n    return <Card onClick={this.handleJobAction} ><CardContent>\n      <Typography variant='title' align='center' gutterBottom>\n        {name}\n      </Typography>\n      status: {status}<br/>\n      id: {id}\n    </CardContent></Card>\n  }\n\n  static mapStateToProps(state, ownProps) {\n    const {id} = ownProps\n    const {data: oMap} = getSliceData(state)\n    return {job: oMap && oMap.get(id)} // job immutable Map\n  }\n}\n\nexport default connect(Job.mapStateToProps)(Job)\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React, { Component, Fragment } from 'react'\nimport {getSliceData, loadJobs} from './jobsSlice'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { connect } from 'react-redux'\nimport ErrorText from 'apputil/ErrorText'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport AddIcon from '@material-ui/icons/Add'\nimport styled from 'styled-components'\nimport Job from './Job'\nimport Grid from '@material-ui/core/Grid'\nimport {showDataAreaForm} from 'dataarea/AreaSlice'\n\nconst ButtonFixed = styled(Button)`\n&& {\n  margin-left: 28px\n  width: 56px\n}\n`\nconst TypographyPad = styled(Typography)`\npadding-left: 84px\n`\nclass Jobs extends Component {\n  addJobHandler = this.addJobHandler.bind(this)\n\n  componentDidMount() {\n    const {dispatch} = this.props\n    dispatch(loadJobs())\n  }\n\n  addJobHandler(e) {\n    const {dispatch} = this.props\n    e.preventDefault()\n    dispatch(showDataAreaForm)\n  }\n\n  render() {\n    const {jobs, e} = this.props\n    console.log('Jobs.render jobs:', jobs, 'e:', e && e.message)\n    return <Fragment>\n      <TypographyPad variant='display1' gutterBottom align='center'>\n        jobs\n        <ButtonFixed onClick={this.addJobHandler} variant=\"fab\" color=\"primary\" aria-label=\"Add\">\n          <AddIcon />\n        </ButtonFixed>\n      </TypographyPad>\n\n      <Grid container justify='center'>\n      {jobs === undefined\n        ? <Grid item>\n          {!e\n            ? <CircularProgress />\n            : <ErrorText e={e} text='Data loading failed' />}\n          </Grid>\n        : jobs.keySeq().map(id => <Grid item key={id}><Job id={id} /></Grid>)}\n      </Grid>\n    </Fragment>\n  }\n\n  static mapStateToProps(state) {\n    const {e, data} = getSliceData(state)\n    return {e, jobs: data}\n  }\n}\n\nexport default connect(Jobs.mapStateToProps)(Jobs)\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React, {Fragment} from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { connect } from 'react-redux'\nimport {getSliceData} from './jobsSlice'\nimport {List} from 'immutable'\nimport styled from 'styled-components'\nimport { imageUrl } from 'api'\n\nconst Img = styled.img`\nmax-width: 100%\n`\nexport default connect(mapStateToProps)(({job, id}) => { // job is immutable Map\n  const name = job && job.get('name') // string\n  const results = job && job.get('results') // Map\n  const imageUrls = (results && results.get('images')) || List()\n\n  return <Fragment>\n    <Typography variant='title' align='center' gutterBottom>\n      Results: {name} {id}\n    </Typography>\n    {imageUrls.map((uri, i) => <Img src={imageUrl(uri)} alt='resultImage' key={i} />)}\n  </Fragment>\n})\n\nfunction mapStateToProps(state, ownProps) {\n  const {id} = ownProps\n  const {data: oMap} = getSliceData(state)\n  return {job: oMap.get(id)} // job immutable Map\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport {StoreSlice} from 'storeutil'\nimport {getSoftware} from 'api'\n\nclass SwSlice extends StoreSlice {\n  async invokeApi() {\n    return getSoftware()\n  }\n}\n\nconst instance = new SwSlice()\n\nexport const setSliceName = instance.setSliceName\nexport const reducer = instance.reducer\nexport const loadSw = instance.load\nexport const getSliceData = instance.getSliceData\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport {StoreSlice} from 'storeutil'\nimport {getHardware} from 'api'\n\nclass HwSlice extends StoreSlice {\n  async invokeApi() {\n    return getHardware()\n  }\n}\n\nconst instance = new HwSlice()\n\nexport const setSliceName = instance.setSliceName\nexport const reducer = instance.reducer\nexport const loadHw = instance.load\nexport const getSliceData = instance.getSliceData\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React, {PureComponent} from 'react'\nimport Select from '@material-ui/core/Select'\nimport FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nexport default class DropDown extends PureComponent {\n  render() {\n    const {label, name, defVal, handleChange, opts} = this.props\n    return <FormControl component='fieldset'>\n      <InputLabel shrink htmlFor=\"age-label-placeholder\">\n        {label}\n      </InputLabel>\n      <Select\n        value={defVal}\n        onChange={handleChange}\n        inputProps={{name}}\n        >{opts.valueSeq().map((opt, i) =>\n          <MenuItem value={String(opt.get('id'))} key={i}>{String(opt.get('label'))}</MenuItem>)}\n      </Select>\n    </FormControl>\n  }\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React, {PureComponent, Fragment} from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport DropDown from './DropDown'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport styled from 'styled-components'\n\nconst FlexForm = styled.form`\n&& {\n  display: flex\n  flex-wrap: wrap\n  align-items: flex-start\n  > * {\n    margin-left: 20px\n    margin-bottom: 20px\n  }\n  > button {\n    margin-top: 20px\n  }\n}\n`\nexport default class Form extends PureComponent {\n  handleChange = this.handleChange.bind(this)\n  submit = this.submit.bind(this)\n  static defaultName = 'Noname'\n\n  constructor(props) {\n    super(props)\n    const {defaultName: name} = Form\n    const {hw, sw} = props\n\n    // get hw and cores\n    const hw0 = hw.valueSeq().first() // the first hardware\n    const hardwareId = hw0.get('id')\n    const max = hw0.get('max') // max cores on this hw\n    const cores = 1\n\n    // get sw and application\n    const sw0 = sw.valueSeq().first()\n    const softwareId = sw0.get('id')\n    const {apps, applicationId} = this.updateApp(softwareId, sw)\n\n    this.state = {name, softwareId, hardwareId, applicationId, cores, max, apps}\n  }\n\n  submit(e) {\n    e.preventDefault()\n    const {name, softwareId, applicationId, hardwareId, cores} = this.state\n    const {action} = this.props\n    action({name, softwareId, applicationId, hardwareId, cores})\n  }\n\n  updateMaxCores(hardwareId) {\n    // find max for this hardware\n    const {hw} = this.props\n    const thisHw = hw.get(hardwareId)\n    const max = thisHw.get('max')\n\n    // ensure state is compliant\n    const {max: smax, cores} = this.state\n    if (smax !== max) this.setState({max})\n    if (cores > max) this.setState({cores: max})\n  }\n\n  updateApp(softwareId, sw, applicationId) {\n    // get allowed appIds\n    const thisSw = sw.get(softwareId)\n    const apps = thisSw.get('applications')\n    const appIds = apps.map(app => app.get('id'))\n\n    // return apps and a valid appId\n    if (!appIds.has(applicationId)) applicationId = appIds.get(0)\n    return {apps, applicationId}\n  }\n\n  handleChange(e) {\n    let {name, value} = e.target // value is an id\n    const {max} = this.state\n    console.log(`handleChange: '${name}' ${typeof value} '${value}'`)\n    if (name === 'cores') { // check cores against max\n      value = Number(value)\n      if (value > max) value = max\n    } else if (name === 'softwareId') {\n      const apid0 = this.state.apid0\n\n      // determine what apps are available with this sw\n      const {sw} = this.props\n      const {apps, applicationId} = this.updateApp(value, sw)\n      this.setState({apps})\n\n      // if change in appId, uopdate state\n      if (applicationId !== apid0) this.setState({applicationId})\n    }\n    this.setState({[name]: value})\n\n    // update cores if there was a change in hardware\n    if (name === 'hardwareId') this.updateMaxCores(value)\n  }\n\n  render() {\n    const {hw, sw} = this.props\n    const {handleChange} = this\n    const {defaultName} = Form\n    //console.log(sw.toJS())\n    console.log('Form.render state:', this.state)\n    const swProps = {label: 'Software', name: 'softwareId', defVal: sw.keySeq().first(), handleChange, opts: sw}\n    const hwProps = {label: 'Hardware', name: 'hardwareId', defVal: hw.keySeq().first(), handleChange, opts: hw}\n    const apProps = {label: 'Application', name: 'applicationId',\n      defVal: this.state.applicationId, handleChange,\n      opts: this.state.apps}\n\n    return <Fragment>\n      <Typography variant='display1' align='center' gutterBottom>\n        New Job\n      </Typography>\n      <FlexForm>\n        <TextField label='Name' name={'name'} defaultValue={defaultName} onChange={handleChange} />\n        <DropDown {...swProps} />\n        <DropDown {...apProps} />\n        <DropDown {...hwProps} />\n        <TextField label='Cores' name='cores' value={this.state.cores}\n          onChange={handleChange} type='number' helperText={`max: ${this.state.max}`} />\n        <Button onClick={this.submit} type='submit' variant=\"contained\" color=\"primary\">\n          Create\n        </Button>\n    </FlexForm></Fragment>\n  }\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React, {PureComponent} from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { connect } from 'react-redux'\nimport {getSliceData as swData} from './swSlice'\nimport {getSliceData as hwData} from './hwSlice'\nimport ErrorText from 'apputil/ErrorText'\nimport {createJob} from 'jobs/jobsSlice'\nimport Form from './Form'\n\nclass JobForm extends PureComponent  {\n  action = o => this.props.dispatch(createJob(o))\n\n  render() {\n    const {action, props: {hw, sw, e}} = this\n    const formProps = {hw, sw, action}\n    console.log('ListLoader.render hw:', hw, 'sw:', sw, 'e:', e && e.message)\n    return (hw === undefined || sw === undefined) && !e\n      ? <CircularProgress />\n      : e\n        ? <ErrorText e={e} text='Options loading failed' />\n        : <Form {...formProps} />\n  }\n\n  static mapStateToProps(state) {\n    const hw = hwData(state)\n    const sw =  swData(state)\n    const e = hw.e || sw.e\n    return {e, hw: hw.data, sw: sw.data}\n  }\n}\n\nexport default connect(JobForm.mapStateToProps)(JobForm)\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React, {Fragment, PureComponent} from 'react'\nimport {stateToSlice, isShowForm, isBlank} from './AreaSlice'\nimport { connect } from 'react-redux'\nimport JobResult from 'jobs/JobResult'\nimport JobForm from 'jobinput/JobForm'\nimport {loadSw} from 'jobinput/swSlice'\nimport {loadHw} from 'jobinput/hwSlice'\n\nclass DataArea extends PureComponent  {\n  componentDidMount() {\n    const {dispatch} = this.props\n    dispatch(loadSw()) // thunk-promise does not throw. Error in store\n    dispatch(loadHw())\n  }\n\n  render() {\n    const {display} = this.props // string id / null / non-string value\n\n    return isBlank(display) // show nothing\n      ? <Fragment />\n      : isShowForm(display) // show the new job form\n        ? <JobForm />\n        : <JobResult id={display} /> // show the image results from a job\n  }\n\n  static mapStateToProps(state) {\n    return {display: stateToSlice(state)}\n  }\n}\n\nexport default connect(DataArea.mapStateToProps)(DataArea)\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React, { Component } from 'react'\nimport Logo from './Logo'\nimport Jobs from 'jobs/Jobs'\nimport DataArea from 'dataarea/DataArea'\nimport Grid from '@material-ui/core/Grid'\nimport styled from 'styled-components'\n\nconst GridMax = styled(Grid)`\n&& {\n  max-width: 10.5in\n  margin: 0\n}\n`\nexport default class App extends Component {\n  render() {\n    return (\n      <GridMax container direction='column' alignItems='center' spacing={40}>\n        <Grid item><Logo /></Grid>\n        <Grid item><Jobs /></Grid>\n        <Grid item><DataArea /></Grid>\n      </GridMax>\n    )\n  }\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport {\n  reducer as jobsReducer,\n  setSliceName as jobsName,\n} from 'jobs/jobsSlice'\nimport {\n  reducer as asReducer,\n  setSliceName as asName} from 'dataarea/AreaSlice'\nimport {\n  reducer as swReducer,\n  setSliceName as swName\n} from 'jobinput/swSlice'\nimport {\n  reducer as hwReducer,\n  setSliceName as hwName\n} from  'jobinput/hwSlice'\n\nlet reducers = {}\n\naddSlice('area', asReducer, asName)\naddSlice('jobs', jobsReducer, jobsName)\naddSlice('hw', hwReducer, hwName)\naddSlice('sw', swReducer, swName)\n\nexport const store = createStore(combineReducers(reducers), applyMiddleware(thunk))\nreducers = null\n\nfunction addSlice(sliceName, reducer, setSliceName) {\n  setSliceName(sliceName)\n  reducers[sliceName] = reducer\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React, {Fragment} from 'react'\nimport App from 'App'\nimport {store} from 'storeutil/store'\nimport {Provider} from 'react-redux'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport {injectGlobal} from 'styled-components'\nimport 'typeface-roboto'\n\ninjectGlobal`\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n}\n`\nexport default () =>\n  <Fragment>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Fragment>\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nAll rights reserved.\n*/\nimport React from 'react'\nimport {render} from 'react-dom'\nimport Root from 'root/Root'\n\nrender(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}